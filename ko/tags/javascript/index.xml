<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Javascript on PCM9881</title><link>https://pcm9881.github.io/ko/tags/javascript/</link><description>Recent content in Javascript on PCM9881</description><generator>Hugo -- gohugo.io</generator><language>ko</language><copyright>&amp;copy; Copyright 2023 pcm9881</copyright><lastBuildDate>Sun, 03 Dec 2023 12:57:17 +0900</lastBuildDate><atom:link href="https://pcm9881.github.io/ko/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>바닐라 자바스크립트로 Document ready 구현하기</title><link>https://pcm9881.github.io/ko/posts/vanilla-javascript-document-ready/</link><pubDate>Sun, 03 Dec 2023 12:57:17 +0900</pubDate><guid>https://pcm9881.github.io/ko/posts/vanilla-javascript-document-ready/</guid><description>DOMContentLoaded DOMContentLoaded 이벤트는 HTML 문서가 완전히 구문 분석되고 모든 지연된 스크립트가 다운로드되고 실행 될 때 발생합니다.
document.addEventListener(&amp;#34;DOMContentLoaded&amp;#34;, () =&amp;gt; { console.log(&amp;#34;문서 콘텐츠가 로드되었습니다.&amp;#34;); }); load load 이벤트는 스타일시트, 스크립트, iframe 및 이미지와 같은 모든 종속 리소스를 포함하여 전체 페이지가 로드되면 이벤트가 시작됩니다.
window.addEventListerner(&amp;#34;load&amp;#34;, () =&amp;gt; { console.log(&amp;#34;문서 전체 리소스가 로드되었습니다.&amp;#34;); }); window.onload vs window.addEventListener(&amp;rsquo;load') 기능적으로는 큰 차이 없습니다. 2번 이상의 호출을 할때 window.onload는 재정의를 하기 때문에 2번 이상의 호출을 할 때 window.</description></item></channel></rss>
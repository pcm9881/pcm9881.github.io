<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>junit on PCM9881</title><link>https://pcm9881.github.io/en/tags/junit/</link><description>Recent content in junit on PCM9881</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; Copyright 2023 pcm9881</copyright><lastBuildDate>Mon, 11 Dec 2023 11:12:56 +0900</lastBuildDate><atom:link href="https://pcm9881.github.io/en/tags/junit/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring Boot Junit5 Test Order</title><link>https://pcm9881.github.io/en/posts/spring-boot-junit5-test-order/</link><pubDate>Mon, 11 Dec 2023 11:12:56 +0900</pubDate><guid>https://pcm9881.github.io/en/posts/spring-boot-junit5-test-order/</guid><description>JUnit 순서 JUnit에서 별도로 순서를 지정안하는 @TestMethodOrder를 사용하지 않으면 어떤식으로 동작하는지 설명하는 글입니다.
요구사항 Spring Boot JUnit 5 메소드명 뒤에 숫자가 붙은 경우 동일한 메소드명 길이로 뒤에 숫자가 붙은 경우 숫자 순서대로 진행됩니다.
코드 import org.junit.jupiter.api.*; public class AnnotationTest { @Test void test1() { System.out.println(&amp;#34;first&amp;#34;); } @Test void test2() { System.out.println(&amp;#34;second&amp;#34;); } @Test void test3() { System.out.println(&amp;#34;third&amp;#34;); } @Disabled void test4() { System.out.println(&amp;#34;fourth&amp;#34;); } } 결과 first second third fourth 메소드명 뒤에 알파벳이 붙은 경우 동일한 메소드명 길이로 뒤에 알파벳이 붙은 경우 알파벳 순서대로 진행됩니다.</description></item></channel></rss>